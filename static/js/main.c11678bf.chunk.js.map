{"version":3,"sources":["components/Todoitem.js","components/Todos.js","components/layout/header.js","components/Addtodo.js","components/pages/about.js","App.js","serviceWorker.js","index.js"],"names":["Todoitem","getStyle","backgroundColor","padding","borderBottom","textDecoration","_this","props","todo","completed","_this$props$todo","this","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","React","Component","background","color","border","borderRadius","cursor","float","Todos","todos","map","components_Todoitem","key","headerStyle","textAlign","linkStyle","Header","react_router_dom","to","Addtodo","state","e","setState","Object","defineProperty","target","name","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","Fragment","App","axios","delete","concat","then","res","toConsumableArray","filter","post","data","_this2","fetch","json","_this3","header","react_router","exact","path","render","components_Addtodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c11678bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Todoitem extends React.Component {\r\n    getStyle = () => {\r\n        return {\r\n            backgroundColor: '#f4f4f4',\r\n            padding: '10px',\r\n            borderBottom: '2px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n   \r\n    render(){\r\n        const {id, title } = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                    <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/>{' '}\r\n                    {title}\r\n                    <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//PropTypes\r\nTodoitem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 10px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n\r\n//PropTypes\r\nTodoitem.propTypes = {\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todoitem","import React from 'react';\r\nimport Todoitem from './Todoitem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends React.Component{\r\n   \r\n  render(){\r\n    return this.props.todos.map((todo) => (\r\n       <Todoitem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/> \r\n    ));\r\n    }\r\n}\r\n\r\n//PropTypes\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>TodoList</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"about\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Addtodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\nonChange = (e) =>{\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n}\r\n\r\nonSubmit = (e) =>{\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({\r\n        title: ''\r\n    })\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={{ display: 'flex'}}>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"title\" \r\n                    placeholder=\"Add Todo\" \r\n                    style={{flex: '10', padding: '5px'}} \r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                    />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Submit\" \r\n                    className=\"btn\" \r\n                    style={{flex: '1'}}/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n//PropTypes\r\nAddtodo.propTypes = {\r\n    addTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Addtodo;","import React from 'react';\r\n\r\nfunction About(){\r\n    return(\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is the TodoList app v1.0.0. It is part of a React crash course</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react'; \nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport Todos from './components/Todos';\nimport Header from './components/layout/header';\nimport Addtodo from './components/Addtodo';\nimport About from './components/pages/about';\nimport axios from 'axios';\n// import uuid from 'uuid';\n\n\nclass App extends React.Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => res.json())\n      .then(data => this.setState({ todos: data}))\n  }\n\n  //Toggle Complete\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map( todo => {\n        if(todo.id === id){\n          todo.completed = !todo.completed;\n        }\n        return todo;\n        \n      })\n    })\n  }\n\n  //Delete Todo\n  delTodo = (id) =>{\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then( res => this.setState({\n        todos: [...this.state.todos.filter( todo => id!== todo.id)]\n      }));    \n  }\n\n  //Add Todo\n  addTodo = (title) =>{\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n      .then(res => this.setState( {\n        todos: [...this.state.todos, res.data]\n      }));\n    \n  }\n\n\n  render(){\n    \n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n          <Header />\n          <Route exact path='/' render={props => (\n            <React.Fragment>\n              <Addtodo addTodo={this.addTodo}/>\n              <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>\n            </React.Fragment>\n          )} /> \n          <Route path='/about' component={About} />        \n          </div>  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}